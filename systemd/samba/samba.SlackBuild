#!/bin/sh

# Copyright 2008, 2009, 2010, 2012, 2013  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Modified 2012 by Eric Hameleers <alien at slackware.com> for ARM port.


VERSION=${VERSION:-4.5.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_dlack}

if [ -e $CWD/machine.conf ]; then
  . $CWD/machine.conf ]
elif [ -e /etc/slackbuild/machine.conf ]; then
  . /etc/slackbuild/machine.conf ]
else
  # Automatically determine the architecture we're building on:
  if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
      i?86) export ARCH=i486 ;;
      arm*) export ARCH=arm ;;
      # Unless $ARCH is already set, use uname -m for all other archs:
         *) export ARCH=$( uname -m ) ;;
    esac
  fi
  # Set CFLAGS/CXXFLAGS and LIBDIRSUFFIX:
  if [ "$ARCH" = "i486" ]; then
    SLKCFLAGS="-O2 -march=i486 -mtune=i686"
    LIBDIRSUFFIX=""
  elif [ "$ARCH" = "s390" ]; then
    SLKCFLAGS="-O2"
    LIBDIRSUFFIX=""
  elif [ "$ARCH" = "x86_64" ]; then
    SLKCFLAGS="-O2 -fPIC"
    LIBDIRSUFFIX="64"
  else
    SLKCFLAGS="-O2"
    LIBDIRSUFFIX=""
  fi
fi

case "$ARCH" in
    arm*) TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)    TARGET=$ARCH-slackware-linux ;;
esac

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-samba
OUTPUT=${OUTPUT:-/var/cache/dlackware}

rm -rf $PKG
mkdir -p $TMP $PKG

if [ -r /usr/lib${LIBDIRSUFFIX}/libtalloc.so.? -a ! -r /var/log/packages/talloc* ]; then
  echo "The Samba package needs to be removed before building to ensure that"
  echo "talloc (and possibly other bundled libraries) are included in the build."
  echo
  echo "Removing the Samba package in 15 seconds, and then continuing with the build."
  sleep 15
  removepkg samba
fi

cd $TMP
rm -rf samba-$VERSION
tar xvf $CWD/samba-$VERSION.tar.gz || exit 1
cd samba-$VERSION || exit 1

if [ ! -d source3/lib/cmdline ]; then
  ( cd source3/lib
    mkdir cmdline
    cd cmdline
    ln -sf ../../../source3/include/popt_common.h . )
fi

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

# Some of these options could be auto-detected, but declaring them
# here doesn't hurt and helps document what features we're trying to
# build in.
#
# LDFLAGS are needed to avoid problems with missing symbols.
LDFLAGS="-Wl,--no-as-needed" \
CFLAGS="$SLKCFLAGS" \
./configure \
  --enable-fhs \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --includedir=/usr/include \
  --bindir=/usr/bin \
  --sbindir=/usr/sbin \
  --mandir=/usr/man \
  --sysconfdir=/etc \
  --with-configdir=/etc/samba \
  --with-piddir=/var/run \
  --with-privatedir=/etc/samba/private \
  --with-privatelibdir=/usr/lib${LIBDIRSUFFIX} \
  --with-modulesdir=/usr/lib${LIBDIRSUFFIX} \
  --with-lockdir=/var/cache/samba \
  --with-logfilebase=/var/log/samba \
  --localstatedir=/var \
  --enable-cups \
  --with-acl-support \
  --with-automount \
  --with-quotas \
  --with-syslog \
  --with-utmp \
  --with-winbind \
  --with-ldap \
  --with-ads \
  --with-pam \
  --with-pammodulesdir=/lib${LIBDIRSUFFIX}/security \
  --build=$TARGET
  # Gives errors:
  #--builtin-libraries=replace,ccan \
  #--bundled-libraries=heimdal \

# -j options don't seem to work...
JOBS=6
MAXJOBS=6
export JOBS MAXJOBS
make || exit 1

mkdir -p \
         $PKG/usr/doc/samba-$VERSION \
         $PKG/var/spool/samba \
         $PKG/var/log/samba \
         $PKG/etc/samba/private \
         $PKG/var/cache/samba
chmod 700 $PKG/etc/samba/private
chmod 1777 $PKG/var/spool/samba

make install DESTDIR=$PKG || exit 1

# Install pkgconfig files:
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig
if [ ! -r $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/talloc.pc ]; then
  cat $CWD/talloc.pc | sed -e "s/\/lib/\/lib${LIBDIRSUFFIX}/" > $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/talloc.pc
fi
if [ ! -r $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/pytalloc-util.pc ]; then
  cat $CWD/pytalloc-util.pc | sed -e "s/\/lib/\/lib${LIBDIRSUFFIX}/" > $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/pytalloc-util.pc
fi

# Install talloc.h:
if [ ! -r $PKG/usr/include/talloc.h ]; then
  cp -a lib/talloc/talloc.h $PKG/usr/include
  chown root:root $PKG/usr/include/talloc.h
  chmod 644 $PKG/usr/include/talloc.h
fi

# Make symlink for pytalloc.h in /usr/include:
if [ ! -r $PKG/usr/include/pytalloc.h ]; then
  if [ -r $PKG/usr/include/samba-4.0/pytalloc.h ]; then
    ( cd $PKG/usr/include ; ln -sf samba-4.0/pytalloc.h . )
  fi
fi

# Make symlink for libtalloc.so:
if [ ! -r $PKG/usr/lib${LIBDIRSUFFIX}/libtalloc.so -a -r $PKG/usr/lib${LIBDIRSUFFIX}/libtalloc.so.? ]; then
  ( cd $PKG/usr/lib${LIBDIRSUFFIX} ; ln -sf libtalloc.so.? libtalloc.so )
fi

# Make symlink for libpytalloc-util.so:
if [ ! -r $PKG/usr/lib${LIBDIRSUFFIX}/libpytalloc-util.so -a -r $PKG/usr/lib${LIBDIRSUFFIX}/libpytalloc-util.so.? ]; then
  ( cd $PKG/usr/lib${LIBDIRSUFFIX} ; ln -sf libpytalloc-util.so.? libpytalloc-util.so )
fi

# Add header, symlink, and pkgconfig file for tdb:
cp -a lib/tdb/include/tdb.h $PKG/usr/include/tdb.h
chmod 644 $PKG/usr/include/tdb.h
( cd $PKG/usr/lib${LIBDIRSUFFIX} ; ln -sf libtdb.so.? libtdb.so )
TDB_VERSION="$(basename $PKG/usr/lib${LIBDIRSUFFIX}/libtdb.so.?.* | cut -f 3- -d .)"
sed lib/tdb/tdb.pc.in \
    -e s,@prefix@,/usr, \
    -e s,@exec_prefix@,\${prefix}, \
    -e s,@libdir@,\${prefix}/lib${LIBDIRSUFFIX}, \
    -e s,@includedir@,\${prefix}/include, \
    -e s,@PACKAGE_VERSION@,$TDB_VERSION, \
    -e s^@LIB_RPATH@^-Wl,-rpath,/usr/lib$LIBDIRSUFFIX^ \
    > $PKG/usr/lib$LIBDIRSUFFIX/pkgconfig/tdb.pc

# Install the smbprint script:
install -m0744 packaging/printing/smbprint $PKG/usr/bin/smbprint

# Add a sample config file:
cat $CWD/smb.conf.default > $PKG/etc/samba/smb.conf-sample

# Setup a default lmhosts file:
echo "127.0.0.1	localhost" > $PKG/etc/samba/lmhosts.new

if [ ! -r $PKG/usr/bin/smbget ]; then
  rm -f $PKG/usr/share/man/man1/smbget.1
fi

# We'll add rc.samba to the init directory, but chmod 644 so that it doesn't
# start by default:
mkdir -p $PKG/etc/rc.d
cat $CWD/rc.samba > $PKG/etc/rc.d/rc.samba.new
chmod 644 $PKG/etc/rc.d/rc.samba.new

mv $PKG/usr/share/man $PKG/usr
gzip -9 $PKG/usr/man/man?/*.?

find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# PAM related stuff we don't use:
rm -r $PKG/usr/share/locale
rm -f $PKG/usr/man/man8/pam*

cp -a \
  COPYING* MAINTAINERS Manifest PFIF.txt README* \
  Read-Manifest-Now Roadmap WHATSNEW.txt docs examples \
  $PKG/usr/doc/samba-$VERSION
# These are installed elsewhere:
rm -rf $PKG/usr/doc/samba-$VERSION/docs/htmldocs \
       $PKG/usr/doc/samba-$VERSION/docs/manpages
# Empty now?
rmdir $PKG/usr/doc/samba-$VERSION/docs 2> /dev/null
# I'm sorry, but when all this info is included in HTML, adding 7MB worth of
# PDF files just to have extra artwork is more fluff than I'll agree to.
rm -f $PKG/usr/doc/samba-$VERSION/docs/*.pdf
# Also redundant also:
rm -rf $PKG/usr/doc/samba-$VERSION/docs/docbook

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cat << EOF

*** Be sure the package contains:

drwx------   2 root     root         1024 Mar 12 13:21 /etc/samba/private
drwxr-xr-x   2 root     root         4096 May  3 15:46 /var/cache/samba/
drwxr-xr-x    2 root     root          48 Aug 29 13:06 /var/log/samba/
drwxrwxrwt   2 root     root         1024 Mar 12 13:21 /var/spool/samba/

EOF

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/samba-$VERSION-$ARCH-$BUILD$TAG.txz

