#!/bin/sh

# Slackware build script for procps

# Copyright 2014  Bart van der Hall, Almere, NL
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PKGNAM=procps
VERSION=${VERSION:-3.3.10}
PSMISCVER=${PSMISCVER:-22.21}
PROCINFONGVER=${PROCINFONGVER:-2.0.304}
PROCINFOVER=${PROCINFOVER:-18}
BUILD=${BUILD:-3}
TAG=${TAG:-_dlack}

NUMJOBS=${NUMJOBS:--j7}

# Automatically determine the architecture we're building on:
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i486 ;;
    armv7hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

wget -c http://prdownloads.sourceforge.net/procps-ng/procps-ng-$VERSION.tar.xz
wget -c ftp://ftp.slackware.com/pub/slackware/slackware-current/source/a/procps-ng/procinfo-18.tar.xz
wget -c ftp://ftp.slackware.com/pub/slackware/slackware-current/source/a/procps-ng/procinfo-ng-2.0.304.tar.xz
wget -c ftp://ftp.slackware.com/pub/slackware/slackware-current/source/a/procps-ng/psmisc-22.21.tar.xz

CWD=$(pwd)
TMP=${TMP:-/tmp/dlackware}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/var/cache/dlackware}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "armv7hl" ]; then
  SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16"
  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

case "$ARCH" in
    arm*) TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)    TARGET=$ARCH-slackware-linux ;;
esac

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf procps-ng-$VERSION
tar xvf $CWD/procps-ng-$VERSION.tar.?z*
cd procps-ng-$VERSION || exit 1
tar xvf $CWD/psmisc-$PSMISCVER.tar.xz || exit 1
tar xvf $CWD/procinfo-ng-$PROCINFONGVER.tar.xz || exit 1
tar xvf $CWD/procinfo-$PROCINFOVER.tar.xz || exit 1
chown -R root:root .

find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

unset DLACK_AUTOGEN
if [ -r ${CWD}/apply-patches.sh ]; then
  . ${CWD}/apply-patches.sh
fi

if [ ! -r configure ] || [ "${DLACK_AUTOGEN}" = "YES" ]; then
  sed -i -e '/^po\/update-potfiles/d' autogen.sh
  sh ./autogen.sh || exit $?
fi

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/ \
  --bindir=/bin \
  --sbindir=/sbin \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --includedir=/usr/include \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --infodir=/usr/info \
  --mandir=/usr/man \
  --datarootdir=/usr/share \
  --docdir=/usr/doc/${PKGNAM}-${VERSION} \
  --enable-static=no \
  --disable-silent-rules \
  --disable-rpath \
  --enable-watch8bit \
  --enable-skill \
  --enable-sigwinch \
  --disable-kill \
  --enable-timeout-stat \
  --with-systemd \
  --build=$TARGET || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=${PKG} || exit 1

# Move the shared library to $PKG/lib${LIBDIRSUFFIX}:
mkdir -p $PKG/lib${LIBDIRSUFFIX}
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  for file in lib*.so.?.* ; do
    mv $file ../../lib${LIBDIRSUFFIX}
    ln -sf ../../lib${LIBDIRSUFFIX}/$file .
  done
  cp -a lib*.so.? ../../lib${LIBDIRSUFFIX}
)

# Remove .la file(s):
rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

# Move "free" to the traditional location:
mv $PKG/usr/bin/free $PKG/bin
( cd $PKG/usr/bin ; ln -sf /bin/free . )

# Move pidof to /sbin (where the sysvinit package had it, and is a hardcoded
# path in at least rc.udev).  We'll link to the new location.
mv $PKG/usr/bin/pidof $PKG/sbin/pidof
( cd $PKG/usr/bin ; ln -sf /sbin/pidof . )
# We never had a copy of pidof here, but since /sbin doesn't really make sense:
( cd $PKG/bin ; ln -sf /sbin/pidof . )

# Link ps in /usr/bin:
( cd $PKG/usr/bin ; ln -sf /bin/ps . )

cd psmisc-$PSMISCVER || exit 1

# Fix fuser -s:
zcat $CWD/patches/psmisc.3638cc55b4d08851faba46635d737b24d016665b.diff.gz | patch -p1 --verbose || exit 1

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/psmisc-$PSMISCVER \
  --disable-silent-rules \
  --disable-rpath \
  --build=$ARCH-slackware-linux || exit 1

make $NUMJOBS || exit 1
make install DESTDIR=$PKG || exit 1

# Move "killall" to the traditional location:
mv $PKG/usr/bin/killall $PKG/bin
( cd $PKG/usr/bin ; ln -sf /bin/killall . )

mkdir -p $PKG/usr/doc/psmisc-$PSMISCVER
cp -a ChangeLog COPYING* NEWS README* $PKG/usr/doc/psmisc-$PSMISCVER

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$PKG/usr/doc/psmisc-$PSMISCVER
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

cd ../procinfo-ng-$PROCINFONGVER || exit 1
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/procinfo-ng-$PROCINFONGVER \
  --enable-maintainer-mode \
  --build=$ARCH-slackware-linux || exit 1

make $NUMJOBS || exit 1
make install DESTDIR=$PKG || exit 1

mkdir -p $PKG/usr/doc/procinfo-ng-$PROCINFONGVER
cp -a GPL-2.txt LGPL-2.1.txt LICENSE.txt COPYING* README* $PKG/usr/doc/procinfo-ng-$PROCINFONGVER

# Now install a couple of scripts from the original procinfo package.
cd ../procinfo-$PROCINFOVER || exit 1
install -m 0755 lsdev.pl $PKG/usr/bin/lsdev
install -m 0755 socklist.pl $PKG/usr/bin/socklist
install -m 0644 lsdev.8 socklist.8 $PKG/usr/man/man8

# Strip binaries:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

# Compress and link manpages, if any:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1 | grep -v '\.gz$') ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

# Back to the procps-ng main source directory...
cd ..

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a \
  AUTHORS ChangeLog COPYING* NEWS README* \
  $PKG/usr/doc/$PKGNAM-$VERSION

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$PKG/usr/doc/$PKGNAM-$VERSION
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

# Create /etc/sysctl.d:
mkdir -p $PKG/etc/sysctl.d

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
