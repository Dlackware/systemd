#!/bin/sh

# Copyright 2008, 2009, 2010, 2011  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PKGNAM=alsa-utils
VERSION=${VERSION:-1.1.0}
BUILD=${BUILD:-1}
TAG=${TAG:-dlack}

NUMJOBS=${NUMJOBS:-" -j7 "}

CWD=$(pwd)
TMP=${TMP:-/tmp/dlackware}
PKG=$TMP/package-alsa-utils
OUTPUT=${OUTPUT:-/var/cache/dlackware}

wget -c ftp://ftp.alsa-project.org/pub/utils/$PKGNAM-$VERSION.tar.bz2

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
elif [ "$ARCH" = "arm" ]; then
  SLKCFLAGS="-O2 -march=armv4 -mtune=xscale"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "armel" ]; then
  SLKCFLAGS="-O2 -march=armv4t"
  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf alsa-utils-$VERSION
tar xvf $CWD/alsa-utils-$VERSION.tar.?z* || exit 1
cd alsa-utils-$VERSION || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

patch -p0 -E --backup --verbose -i ${CWD}/$PKGNAM-1.0.28-alsaconf.patch

sed -i \
  -e '/^ExecStart=/s|restore|-E ALSA_CONFIG_PATH=/etc/alsa/alsactl.conf --initfile=/lib/alsa/init/00main \0|g' \
  -e '/^ExecStart=/s| store|-E ALSA_CONFIG_PATH=/etc/alsa/alsactl.conf\0|g' \
  alsactl/alsa-restore.service.in || exit 1
sed -i \
  -e '/^ExecStart=/s|rdaemon|-E ALSA_CONFIG_PATH=/etc/alsa/alsactl.conf --initfile=/lib/alsa/init/00main \0|g' \
  -e '/ExecStop=/s| rkill| kill|g' \
  alsactl/alsa-state.service.in || exit

CFLAGS="${SLKCFLAGS} -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64" \
CXXFLAGS="${SLKCFLAGS} -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --sbindir=/sbin \
  --sysconfdir=/etc \
  --localstatedir=/var/lib \
  --infodir=/usr/info \
  --with-systemdsystemunitdir=/lib/systemd/system \
  --build=$ARCH-slackware-linux

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG

mkdir -p ${PKG}/etc/rc.d
install -pm0755 ${CWD}/rc.alsa \
  ${PKG}/etc/rc.d/rc.alsa || exit 1

mkdir -p ${PKG}/etc/default
cat > ${PKG}/etc/default/alsa.new <<'EOF'
# /etc/rc.d/rc.alsa options
# Set to YES to enable loading of alsa oss modules.
ALSA_OSS=NO
EOF

mkdir -p ${PKG}/usr/sbin
ln -s ../../sbin/alsactl ${PKG}/usr/sbin/alsactl || exit 1

mkdir -p ${PKG}/etc/alsa
cat ${CWD}/alsactl.conf > ${PKG}/etc/alsa/alsactl.conf.new || exit 1

# Install support utilities
mkdir -p ${PKG}/bin
cat ${CWD}/alsaunmute > ${PKG}/bin/alsaunmute || exit 1
chmod 0755 ${PKG}/bin/alsaunmute

# Move /usr/share/alsa/init to /lib/alsa/init
mkdir -p -m 755 ${PKG}/lib/alsa
mv ${PKG}/usr/share/alsa/init ${PKG}/lib/alsa/ || exit 1

# Link /lib/alsa/init to /usr/share/alsa/init back
ln -s ../../../lib/alsa/init ${PKG}/usr/share/alsa/init

mkdir -p ${PKG}/lib/udev/rules.d
cat > ${PKG}/lib/udev/rules.d/90-alsa-restore.rules <<'EOF'
ACTION=="add", SUBSYSTEM=="sound", KERNEL=="controlC*", KERNELS!="card*", GOTO="alsa_restore_go"
GOTO="alsa_restore_end"
LABEL="alsa_restore_go"
TEST!="/etc/alsa/state-daemon.conf", RUN+="/sbin/alsactl -E ALSA_CONFIG_PATH=/etc/alsa/alsactl.conf --initfile=/lib/alsa/init/00main restore /dev/$name"
TEST=="/etc/alsa/state-daemon.conf", RUN+="/sbin/alsactl -E ALSA_CONFIG_PATH=/etc/alsa/alsactl.conf --initfile=/lib/alsa/init/00main nrestore /dev/$name"
LABEL="alsa_restore_end"

EOF

find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Compress and if needed symlink the man pages:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

mkdir -p $PKG/usr/doc/alsa-utils-$VERSION
cp -a \
  COPYING INSTALL TODO \
  seq/aconnect/README.aconnect \
  seq/aseqnet/README.aseqnet \
  $PKG/usr/doc/alsa-utils-$VERSION
cp -a alsamixer/README $PKG/usr/doc/alsa-utils-$VERSION/README.alsamixer

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/*-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/alsa-utils-$VERSION-$ARCH-$BUILD$TAG.txz

