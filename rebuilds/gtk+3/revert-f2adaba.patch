diff --git a/gdk/wayland/Makefile.am b/gdk/wayland/Makefile.am
index cccb572f15..c63cb38b18 100644
--- a/gdk/wayland/Makefile.am
+++ b/gdk/wayland/Makefile.am
@@ -33,8 +33,6 @@ BUILT_SOURCES = 				\
 	tablet-unstable-v2-protocol.c		\
 	keyboard-shortcuts-inhibit-unstable-v1-client-protocol.h \
 	keyboard-shortcuts-inhibit-unstable-v1-protocol.c	\
-	server-decoration-client-protocol.h		\
-	server-decoration-protocol.c			\
 	gtk-shell-client-protocol.h		\
 	gtk-shell-protocol.c
 
diff --git a/gdk/wayland/gdkdisplay-wayland.c b/gdk/wayland/gdkdisplay-wayland.c
index 8bcd6755a6..3814157557 100644
--- a/gdk/wayland/gdkdisplay-wayland.c
+++ b/gdk/wayland/gdkdisplay-wayland.c
@@ -46,7 +46,6 @@
 #include "tablet-unstable-v2-client-protocol.h"
 #include "xdg-shell-unstable-v6-client-protocol.h"
 #include "xdg-foreign-unstable-v1-client-protocol.h"
-#include "server-decoration-client-protocol.h"
 
 /**
  * SECTION:wayland_interaction
@@ -334,35 +333,6 @@ static const struct wl_shm_listener wl_shm_listener = {
   wl_shm_format
 };
 
-static void
-server_decoration_manager_default_mode (void                                          *data,
-                                        struct org_kde_kwin_server_decoration_manager *manager,
-                                        uint32_t                                       mode)
-{
-  g_assert (mode <= ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_MODE_SERVER);
-  const char *modes[] = {
-    [ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_MODE_NONE]   = "none",
-    [ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_MODE_CLIENT] = "client",
-    [ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_MODE_SERVER] = "server",
-  };
-  GdkWaylandDisplay *display_wayland = data;
-  g_debug ("Compositor prefers decoration mode '%s'", modes[mode]);
-  display_wayland->server_decoration_mode = mode;
-}
-
-static const struct org_kde_kwin_server_decoration_manager_listener server_decoration_listener = {
-  .default_mode = server_decoration_manager_default_mode
-};
-
-gboolean
-gdk_wayland_display_prefers_ssd (GdkDisplay *display)
-{
-  GdkWaylandDisplay *display_wayland = GDK_WAYLAND_DISPLAY (display);
-  if (display_wayland->server_decoration_manager)
-    return display_wayland->server_decoration_mode == ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_MODE_SERVER;
-  return FALSE;
-}
-
 static void
 gdk_registry_handle_global (void               *data,
                             struct wl_registry *registry,
@@ -486,15 +456,6 @@ gdk_registry_handle_global (void               *data,
         wl_registry_bind (display_wayland->wl_registry, id,
                           &zwp_keyboard_shortcuts_inhibit_manager_v1_interface, 1);
     }
-  else if (strcmp (interface, "org_kde_kwin_server_decoration_manager") == 0)
-    {
-      display_wayland->server_decoration_manager =
-        wl_registry_bind (display_wayland->wl_registry, id,
-                          &org_kde_kwin_server_decoration_manager_interface, 1);
-      org_kde_kwin_server_decoration_manager_add_listener (display_wayland->server_decoration_manager,
-                                                           &server_decoration_listener,
-                                                           display_wayland);
-    }
   else
     handled = FALSE;
 
diff --git a/gdk/wayland/gdkdisplay-wayland.h b/gdk/wayland/gdkdisplay-wayland.h
index 9b1555761c..d24a48ef5b 100644
--- a/gdk/wayland/gdkdisplay-wayland.h
+++ b/gdk/wayland/gdkdisplay-wayland.h
@@ -32,7 +32,6 @@
 #include <gdk/wayland/xdg-shell-unstable-v6-client-protocol.h>
 #include <gdk/wayland/xdg-foreign-unstable-v1-client-protocol.h>
 #include <gdk/wayland/keyboard-shortcuts-inhibit-unstable-v1-client-protocol.h>
-#include <gdk/wayland/server-decoration-client-protocol.h>
 
 #include <glib.h>
 #include <gdk/gdkkeys.h>
@@ -80,7 +79,6 @@ struct _GdkWaylandDisplay
   struct zxdg_exporter_v1 *xdg_exporter;
   struct zxdg_importer_v1 *xdg_importer;
   struct zwp_keyboard_shortcuts_inhibit_manager_v1 *keyboard_shortcuts_inhibit;
-  struct org_kde_kwin_server_decoration_manager *server_decoration_manager;
 
   GList *async_roundtrips;
 
@@ -108,8 +106,6 @@ struct _GdkWaylandDisplay
   int data_device_manager_version;
   int gtk_shell_version;
 
-  uint32_t server_decoration_mode;
-
   struct xkb_context *xkb_context;
 
   GdkWaylandSelection *selection;
diff --git a/gdk/wayland/gdkwaylanddisplay.h b/gdk/wayland/gdkwaylanddisplay.h
index d980d6cf87..f4b51c82d1 100644
--- a/gdk/wayland/gdkwaylanddisplay.h
+++ b/gdk/wayland/gdkwaylanddisplay.h
@@ -57,9 +57,6 @@ GDK_AVAILABLE_IN_3_22
 void                    gdk_wayland_display_set_startup_notification_id (GdkDisplay *display,
                                                                          const char *startup_id);
 
-GDK_AVAILABLE_IN_3_22
-gboolean                gdk_wayland_display_prefers_ssd         (GdkDisplay *display);
-
 G_END_DECLS
 
 #endif /* __GDK_WAYLAND_DISPLAY_H__ */
diff --git a/gdk/wayland/gdkwaylandwindow.h b/gdk/wayland/gdkwaylandwindow.h
index 93b7802b6e..566d40524c 100644
--- a/gdk/wayland/gdkwaylandwindow.h
+++ b/gdk/wayland/gdkwaylandwindow.h
@@ -77,9 +77,6 @@ GDK_AVAILABLE_IN_3_22
 gboolean                 gdk_wayland_window_set_transient_for_exported (GdkWindow *window,
                                                                         char      *parent_handle_str);
 
-GDK_AVAILABLE_IN_3_22
-void gdk_wayland_window_announce_csd                        (GdkWindow *window);
-
 G_END_DECLS
 
 #endif /* __GDK_WAYLAND_WINDOW_H__ */
diff --git a/gdk/wayland/gdkwindow-wayland.c b/gdk/wayland/gdkwindow-wayland.c
index bc1a9d0bdd..32bf75a096 100644
--- a/gdk/wayland/gdkwindow-wayland.c
+++ b/gdk/wayland/gdkwindow-wayland.c
@@ -126,7 +126,6 @@ struct _GdkWindowImplWayland
     struct wl_egl_window *egl_window;
     struct wl_egl_window *dummy_egl_window;
     struct zxdg_exported_v1 *xdg_exported;
-    struct org_kde_kwin_server_decoration *server_decoration;
   } display_server;
 
   EGLSurface egl_surface;
@@ -1682,21 +1681,6 @@ window_anchor_to_gravity (GdkGravity rect_anchor)
     }
 }
 
-void
-gdk_wayland_window_announce_csd (GdkWindow *window)
-{
-  GdkWaylandDisplay *display_wayland = GDK_WAYLAND_DISPLAY (gdk_window_get_display (window));
-  GdkWindowImplWayland *impl = GDK_WINDOW_IMPL_WAYLAND (window->impl);
-  if (!display_wayland->server_decoration_manager)
-    return;
-  impl->display_server.server_decoration =
-    org_kde_kwin_server_decoration_manager_create (display_wayland->server_decoration_manager,
-                                                  impl->display_server.wl_surface);
-  if (impl->display_server.server_decoration)
-    org_kde_kwin_server_decoration_request_mode (impl->display_server.server_decoration,
-                                                ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_MODE_CLIENT);
-}
-
 static GdkWindow *
 get_real_parent_and_translate (GdkWindow *window,
                                gint      *x,
diff --git a/gtk/gtkwindow.c b/gtk/gtkwindow.c
index bbbb9eef33..eb3b33578a 100644
--- a/gtk/gtkwindow.c
+++ b/gtk/gtkwindow.c
@@ -6100,10 +6100,7 @@ gtk_window_should_use_csd (GtkWindow *window)
 
 #ifdef GDK_WINDOWING_WAYLAND
   if (GDK_IS_WAYLAND_DISPLAY (gtk_widget_get_display (GTK_WIDGET (window))))
-    {
-      GdkDisplay *gdk_display = gtk_widget_get_display (GTK_WIDGET (window));
-      return !gdk_wayland_display_prefers_ssd (gdk_display);
-    }
+    return TRUE;
 #endif
 
 #ifdef GDK_WINDOWING_MIR
@@ -7480,11 +7477,6 @@ gtk_window_realize (GtkWidget *widget)
   if (!priv->decorated || priv->client_decorated)
     gdk_window_set_decorations (gdk_window, 0);
 
-#ifdef GDK_WINDOWING_WAYLAND
-  if (priv->client_decorated && GDK_IS_WAYLAND_WINDOW (gdk_window))
-    gdk_wayland_window_announce_csd (gdk_window);
-#endif
-
   if (!priv->deletable)
     gdk_window_set_functions (gdk_window, GDK_FUNC_ALL | GDK_FUNC_CLOSE);
 
