#!/bin/sh

# Slackware build script for llvm

# Copyright 2008-2013 Heinz Wiesinger, Amsterdam, The Netherlands
# Copyright 2012, 2013, 2014  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PKGNAM=llvm
VERSION=3.4.2
BUILD=${BUILD:-1}
TAG=${TAG:-_dlack}

NUMJOBS=${NUMJOBS:-" -j3 "}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

wget -c http://llvm.org/releases/$VERSION/$PKGNAM-$VERSION.src.tar.gz
wget -c http://llvm.org/releases/$VERSION/cfe-$VERSION.src.tar.gz

CWD=$(pwd)
TMP=${TMP:-/tmp/dlackware}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/var/cache/dlackware}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
  SLKTARGET=${SLKTARGET:-i486}
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  SLKTARGET=${SLKTARGET:-i686}
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  SLKTARGET=${SLKTARGET:-x86_64}
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
  SLKTARGET=${SLKTARGET:-i486}
fi

SLKDTARGET=${SLKDTARGET:-slackware}

rm -rf $TMP
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PKGNAM-$VERSION.src $PKGNAM-$VERSION
tar xvf $CWD/$PKGNAM-$VERSION.src.tar.gz || exit 1

cd $PKGNAM-$VERSION/tools || cd $PKGNAM-$VERSION.src/tools || exit 1
  tar xvf $CWD/cfe-$VERSION.src.tar.gz || exit 1
  mv cfe-$VERSION clang || mv cfe-$VERSION.src clang || exit 1
cd ../

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

sed -i \
  -e "/ActiveLibDir/s|/lib\"|/lib${LIBDIRSUFFIX}/${NAME}\"|g" \
  -e "/ActiveLibDir/s|/lib/\"|/lib${LIBDIRSUFFIX}/${NAME}/\"|g" \
  tools/llvm-config/llvm-config.cpp || exit 1

# FIXME file this
# configure does not properly specify libdir
sed -i \
  -e "s|(PROJ_prefix)/lib|(PROJ_prefix)/lib${LIBDIRSUFFIX}/${NAME}|g" \
  -e 's|\$(PROJ_prefix)/etc/llvm|/etc/llvm|g' \
  Makefile.config.in || exit 1

sed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

sed -i "s|/lib /usr/lib \$lt_ld_extra|/lib${LIBDIRSUFFIX} /usr/lib${LIBDIRSUFFIX} \$lt_ld_extra|" \
  ./configure
sed -i "s|${VERSION}svn|${VERSION}|g" configure

# --mandir doesn't work currently
# need to disable assertions to make llvm thread-safe
# clang resource dir is a relative path based on the location of the clang binary
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \

mkdir obj
( cd obj || exit 1
../configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX}/${PKGNAM} \
  --datadir=/usr/lib${LIBDIRSUFFIX}/${PKGNAM} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --infodir=/usr/info \
  --mandir=/usr/man \
  --disable-polly \
  --disable-libcpp \
  --enable-cxx11 \
  --enable-clang-arcmt \
  --enable-clang-static-analyzer \
  --enable-clang-rewriter \
  --enable-optimized \
  --disable-assertions \
  --disable-profiling \
  --disable-werror \
  --disable-expensive-checks \
  --enable-debug-runtime \
  --enable-keep-symbols \
  --enable-jit \
  --enable-libffi \
  --enable-ltdl-install \
  --enable-threads \
  --enable-pthreads \
  --enable-zlib \
  --enable-pic \
  --enable-shared \
  --disable-embed-stdcxx \
  --enable-timestamps \
  --enable-backtraces \
  --enable-experimental-targets=R600 \
  --with-binutils-include=/usr/include \
  --with-c-include-dirs=/usr/include:$(echo /usr/lib${LIBDIRSUFFIX}/gcc/${SLKTARGET}-${SLKDTARGET}-linux*/*/include) \
  --enable-bindings=none \
  --disable-doxygen \
  --build=${SLKTARGET}-${SLKDTARGET}-linux || exit 1

  export VERBOSE=1
  make -j${NJOBS} REQUIRES_RTTI=1 OPTIMIZE_OPTION="${SLKCFLAGS}" || make REQUIRES_RTTI=1 OPTIMIZE_OPTION="${SLKCFLAGS}" || exit 1

  make install DESTDIR=${PKG} PROJ_docsdir=/usr/doc/${NAME}-${VERSION} || exit 1

) || exit 1

# compat32 files
if [ "${ARCH}" = "x86_64" ] ;then
  rm -f ${PKG}/usr/lib/clang/*/lib/*/*-i386.a
fi

# Add symlinks for $ARCH-slackware-linux-{clang,clang++}:
( cd ${PKG}/usr/bin || exit 1
  ln -sf clang ${SLKTARGET}-${SLKDTARGET}-linux-clang
  ln -sf clang++ ${SLKTARGET}-${SLKDTARGET}-linux-clang++
) || exit 1

unset MARCH
case "${ARCH}" in
  i[3-6]86|s390)  MARCH=32
             ;;
    x86_64)  MARCH=64
             ;;
esac

if [ -n "${MARCH}" ] ;then

  mv ${PKG}/usr/bin/llvm-config ${PKG}/usr/bin/llvm-config-${MARCH} || exit 1

cat > ${PKG}/usr/bin/llvm-config <<'EOF'
#!/bin/bash

ARCH=$(uname -m)

case ${ARCH} in
  x86_64 | s390x | ppc64 | sparc64)
    BITS=64
    ;;
  * )
    BITS=32
    ;;
esac

exec $0-${BITS} "$@"
EOF
  chmod 755 ${PKG}/usr/bin/llvm-config || exit 1

  mv ${PKG}/usr/include/llvm/Config/config.h \
    ${PKG}/usr/include/llvm/Config/config-${MARCH}.h || exit 1

cat > ${PKG}/usr/include/llvm/Config/config.h <<'EOF'
#include <bits/wordsize.h>

#if __WORDSIZE == 32
#include "config-32.h"
#elif __WORDSIZE == 64
#include "config-64.h"
#else
#error "Unknown word size"
#endif
EOF

  mv ${PKG}/usr/include/llvm/Config/llvm-config.h \
    ${PKG}/usr/include/llvm/Config/llvm-config-${MARCH}.h || exit 1

cat > ${PKG}/usr/include/llvm/Config/llvm-config.h <<'EOF'
#include <bits/wordsize.h>

#if __WORDSIZE == 32
#include "llvm-config-32.h"
#elif __WORDSIZE == 64
#include "llvm-config-64.h"
#else
#error "Unknown word size"
#endif
EOF

fi

# Create ld.so.conf.d entry
mkdir -p ${PKG}/etc/ld.so.conf.d
cat > ${PKG}/etc/ld.so.conf.d/llvm-${ARCH}.conf << EOF
/usr/lib${LIBDIRSUFFIX}/llvm
EOF

rm -rf ${PKG}/var

# Static analyzer not installed by default:
# http://clang-analyzer.llvm.org/installation#OtherPlatforms
mkdir -p ${PKG}/usr/libexec/clang-analyzer/scan-build

cp -pr tools/clang/tools/scan-view ${PKG}/usr/libexec/clang-analyzer/ || exit 1

# scan-build
for file in c++-analyzer ccc-analyzer scan-build scanview.css sorttable.js; do
  cp -p tools/clang/tools/scan-build/${file} \
    ${PKG}/usr/libexec/clang-analyzer/scan-build/ || exit 1
done

# scan-build manual page
mkdir -p ${PKG}/usr/man/man1
cp -p tools/clang/tools/scan-build/scan-build.1 ${PKG}/usr/man/man1/ || exit 1

# scan-build requires clang in search path
ln -s ../../../bin/clang ${PKG}/usr/libexec/clang-analyzer/scan-build/clang || exit 1

# create launchers
for f in scan-{build,view}; do
  ln -s ../libexec/clang-analyzer/${f}/${f} ${PKG}/usr/bin/${f} || exit 1
done

# install CMake modules
mkdir -p ${PKG}/usr/share/llvm/cmake/
cp -p cmake/modules/*.cmake ${PKG}/usr/share/llvm/cmake/ || exit 1

find ${PKG} -name .dir -print0 | xargs -0r rm -f
if [ -x /usr/bin/chrpath ] ;then
  file ${PKG}/usr/bin/* | awk -F: '$2~/ELF/{print $1}' | xargs -r chrpath -d
  file ${PKG}/lib${LIBDIRSUFFIX}/llvm/*.so | awk -F: '$2~/ELF/{print $1}' | xargs -r chrpath -d
  chrpath -d ${PKG}/usr/libexec/clang-cc
fi

# Get rid of erroneously installed example files.
rm -f ${PKG}/usr/lib${LIBDIRSUFFIX}/${PKGNAM}/*LLVMHello.*

# Remove deprecated tools.
rm -f ${PKG}/usr/bin/gcc{as,ld}

find ${PKG}/usr/lib${LIBDIRSUFFIX} -name '*.a' -type f -print0 | xargs -0 chmod -x

find ${PKG} | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Move man page directory:
mv $PKG/usr/share/man $PKG/usr/
# Try to remove /usr/share, which should be empty now.  If it's not, fine.
rmdir $PKG/usr/share

# Move scan-build man-page into place
mv $PKG/usr/lib$LIBDIRSUFFIX/clang-analyzer/scan-build/scan-build.1 \
  $PKG/usr/man/man1/

# Strip binaries:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

# Compress manual pages:
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do
  ln -s $( readlink $i ).gz $i.gz
  rm $i
done

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/clang
cp -a CREDITS* LICENSE* README* $PKG/usr/doc/$PKGNAM-$VERSION
cp -a tools/clang/{INSTALL,LICENSE,NOTES,README}* \
  $PKG/usr/doc/$PKGNAM-$VERSION/clang
mv $PKG/usr/docs/llvm/* $PKG/usr/doc/$PKGNAM-$VERSION
rm -rf $PKG/usr/docs

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.txz

