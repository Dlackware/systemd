#!/bin/sh

# Copyright 2008, 2009, 2010, 2011, 2012  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PKGNAM=lvm2
VERSION=${VERSION:-2.02.106}
BUILD=${BUILD:-1}
TAG=${TAG:-_dlack}

NUMJOBS=${NUMJOBS:-" -j7 "}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

wget -c ftp://sources.redhat.com/pub/${PKGNAM}/LVM2.${VERSION}.tgz

CWD=$(pwd)
TMP=${TMP:-/tmp/dlackware}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/var/cache/dlackware}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf LVM2.$VERSION
tar xvf $CWD/LVM2.$VERSION.tgz || exit 1
cd LVM2.$VERSION || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

# Patch
patch -p1 --verbose< $CWD/lvm2-2.02.64-dmeventd-libs.patch || exit 1
patch -p0 --verbose< $CWD/lvm2-2.02.70-asneeded.patch || exit 1
patch -p1 --verbose< $CWD/lvm2-2.02.92-dynamic-static-ldflags.patch || exit 1
patch -p0 --verbose< $CWD/lvm2-2.02.99-locale-muck.patch || exit 1
patch -p1 --verbose< $CWD/lvm2-set-default-preferred_names.patch || exit 1
sed -i -e '/^STATIC_LIBS =/s|$| -lrt|g' make.tmpl.in

libtoolize --copy --force
autoreconf -vif

# uid 0 = root
# gid 6 = disk
CFLAGS="$SLKCFLAGS" \
./configure --enable-readline \
	--enable-cmdlib \
	--enable-dmeventd \
	--enable-applib \
	--exec-prefix=/ \
	--bindir=/bin \
	--sbindir=/sbin \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--with-usrlibdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--enable-realtime \
	--with-lvm1=internal \
	--enable-pkgconfig \
	--enable-udev_sync \
	--enable-udev_rules \
	--with-udev-prefix="" \
	--with-device-uid=0 \
	--with-device-gid=6 \
	--with-device-mode=0660 \
	--with-default-locking-dir=/run/lock/lvm \
	--with-default-run-dir=/run/lvm \
	--with-clvmd-pidfile=/run/lvm/clvmd.pid \
	--with-cmirrord-pidfile=/run/lvm/cmirrord.pid \
	--with-dmeventd-pidfile=/run/lvm/dmeventd.pid \
	--with-tmpfilesdir=/usr/lib/tmpfiles.d \
	--build=$ARCH-slackware-linux

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1
make install_systemd_units DESTDIR=$PKG || exit 1
make install_tmpfiles_configuration DESTDIR=$PKG || exit 1

mv $PKG/etc/lvm/lvm.conf $PKG/etc/lvm/lvm.conf.new

if [ -d $PKG/usr/share/man ]; then # --mandir was ignored
  mv $PKG/usr/share/man $PKG/usr
  rmdir $PKG/usr/share
fi

# Move the binary and shared library to /sbin and /lib{,64}:
mkdir -p $PKG/lib${LIBDIRSUFFIX}
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  for file in lib*.so.?.* ; do
    mv $file ../../lib${LIBDIRSUFFIX}
    ln -sf ../../lib${LIBDIRSUFFIX}/$file .
  done
)

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Compress and link manpages, if any:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

mkdir -p $PKG/usr/doc/LVM2.$VERSION
cp -a \
  COPYING* INSTALL README* VERSION WHATS_NEW \
  $PKG/usr/doc/LVM2.$VERSION

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/*-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
