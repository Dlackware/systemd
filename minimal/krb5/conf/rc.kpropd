#!/bin/bash
#
# kpropd.init  Start and stop the Kerberos 5 propagation client.
#
# chkconfig:   - 35 65
# description: Kerberos 5 is a trusted third-party authentication system.  \
#	       This script starts and stops the service that allows this \
#              KDC to receive updates from your master KDC.
# processname: kpropd
#

### BEGIN INIT INFO
# Provides: kprop
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Should-Start: portreserve
# Default-Start:
# Default-Stop: 0 1 2 3 4 5 6
# Short-Description: start and stop the Kerberos 5 propagation client
# Description: The kpropd service accepts database updates pushed to it from \
#              the master KDC.  It will never be needed on a master KDC.
### END INIT INFO

prog="Kerberos 5 Propagation Server"
kpropd="/usr/sbin/kpropd"
lockfile=/var/lock/subsys/kprop
pidfile=/var/run/kpropd.pid

RETVAL=0

PID=$(/sbin/pidof -o %PPID ${kpropd})

# Shell functions to cut down on useless shell instances.
start() {
  if [ -f /var/kerberos/krb5kdc/kpropd.acl ] ; then
    exit 6
  else
    [ -x ${kpropd} ] || exit 5
  fi
  echo -n "Starting ${prog}: "

  if [ -z "${PID}" ] ;then 
    ${kpropd} -S 2>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  if test ${RETVAL} -ne 0 ; then
    if /sbin/pidof -o %PPID ${kpropd} > /dev/null ; then
      RETVAL=0
    fi
  fi
  if [ ${RETVAL} -eq 0 ] && touch ${lockfile} ; then
    echo -e "\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

stop() {
  echo -n "Stopping ${prog}: "
  if [ -n "${PID}" ] ;then
    kill ${PID} &>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
    echo -e "\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

restart(){
  stop
  unset PID
  sleep 1
  start
}

status() {
  if [ -n "${PID}" ] ;then
    echo "${kpropd} is running in pid ${PID}."
  else
    echo "${kpropd} is not running."
    RETVAL=3
  fi
  return ${RETVAL}
}

condrestart(){
  [ -e ${lockfile} ] && restart
  return 0
}

# See how we were called.
case "$1" in
  start|stop|reload|status|condrestart)
    $1
    ;;
  reload)
    restart
    ;;
  *)
  echo "Usage: $0 {start|stop|restart|reload|status|condrestart}"
  RETVAL=2
  ;;
esac

exit ${RETVAL}
