#!/bin/sh
# Copyright 2013 Bart van der Hall, Istanbul, TR
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.
# -----------------------------------------------------------------------------

PKGNAM=ffmpeg
VERSION=${VERSION:-2.2.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_dlack}

NUMJOBS=${NUMJOBS:--j7}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
       *) export ARCH=$( uname -m ) ;;
  esac
fi

wget -c http://www.ffmpeg.org/releases/$PKGNAM-$VERSION.tar.bz2

CWD=$(pwd)
TMP=${TMP:-/tmp/dlackware}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/var/cache/dlackware}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# --enable-runtime-cpu is meant for libswscale only and
# has no influence on the other parts of ffmpeg so there's
# not really a point in bothering
PKGARCH=$(uname -m)_custom

# Configure ffmpeg features not autodetected by default
# Unfortunately ffmpeg's configure doesn't support --enable-feature=yes
# syntax, so we have to do it the complicated way :/

libcelt=""    ; [ "${CELT:-no}" != "no" ]         && libcelt="--enable-libcelt"
libdc1394=""  ; [ "${DC1394:-no}" != "no" ]       && libdc1394="--enable-libdc1394"
libfrei0r=""  ; [ "${FREI0R:-no}" != "no" ]       && libfrei0r="--enable-frei0r"
libgsm=""     ; [ "${GSM:-no}" != "no" ]          && libgsm="--enable-libgsm"
librtmp=""    ; [ "${RTMP:-no}" != "no" ]         && librtmp="--enable-librtmp"
dirac_fast="" ; [ "${SCHROEDINGER:-no}" != "no" ] && dirac_fast="--enable-libschroedinger"
libspeex=""   ; [ "${SPEEX:-no}" != "no" ]        && libspeex="--enable-libspeex"
libvpx=""     ; [ "${VPX:-no}" != "no" ]          && libvpx="--enable-libvpx"
libxvid=""    ; [ "${XVID:-no}" != "no" ]         && libxvid="--enable-libxvid"
libbluray=""  ; [ "${BLURAY:-no}" != "no" ]       && libbluray="--enable-libbluray"
libass=""     ; [ "${ASS:-no}" != "no" ]          && libass="--enable-libass"
libopenal=""  ; [ "${OPENAL:-no}" != "no" ]       && libopenal="--enable-openal"
libiec61883=""; [ "${IEC61883:-no}" != "no" ]     && libiec61883="--enable-libiec61883"
libilbc="";     [ "${ILBC:-no}" != "no" ]         && libilbc="--enable-libilbc"
libmodplug="";  [ "${MODPLUG:-no}" != "no" ]      && libmodplug="--enable-libmodplug"
libopus="";     [ "${OPUS:-no}" != "no" ]         && libopus="--enable-libopus"
libtwolame="";  [ "${TWOLAME:-no}" != "no" ]      && libtwolame="--enable-libtwolame"
ladspa="";      [ "${LADSPA:-no}" != "no" ]       && ladspa="--enable-ladspa"
#opencl="";      [ "${OPENCL:-no}" != "no" ]       && opencl="--enable-opencl"

opencore_amr="" ; [ "${OPENCORE:-no}" != "no" ] && \
  opencore_amr="--enable-libopencore-amrnb --enable-libopencore-amrwb"
libfaac=""      ; [ "${FAAC:-no}" != "no" ]     && \
  { libfaac="--enable-libfaac" ; non_free="--enable-nonfree" ; }
ssl=""      ; [ "${OPENSSL:-no}" != "no" ]     && \
  { ssl="--enable-openssl" ; non_free="--enable-nonfree" ; }
openjpeg=""     ; [ "${JP2:-no}" != "no" ]      && \
  { openjpeg="--enable-libopenjpeg" ; \
    SLKCFLAGS="$SLKCFLAGS -I/usr/include/openjpeg-1.5" ; }

mp3lame="--enable-libmp3lame" ; [ "${LAME:-no}" != "yes" ] && mp3lame=""
libx264="--enable-libx264"    ; [ "${X264:-yes}" != "yes" ] && libx264=""

# opencv support is currently broken: http://code.opencv.org/issues/1925
#libopencv=""  ; [ "${OPENCV:-no}" != "no" ]       && libopencv="--enable-libopencv"

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM-$VERSION
tar xvf $CWD/$PKGNAM-$VERSION.tar.bz2
cd $PKGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# for some reason it tries to #include <X11/Xlib.h>, but doesn't use it
sed -i s:\#define\ HAVE_X11:\#define\ HAVE_LINUX: ffplay.c || exit 1
# To make sure the ffserver test will work
sed -i -e "s:-e debug=off::" tests/ffserver-regression.sh || exit 1

sed -i -e 's/opteron/opteron|athlon64-sse3|k8-sse3|opteron-sse3/g' configure || exit 1

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --shlibdir=/usr/lib${LIBDIRSUFFIX} \
  --docdir=/usr/doc/$PKGNAM-$VERSION/html \
  --mandir=/usr/man \
  --disable-debug \
  --enable-shared \
  --disable-static \
  --enable-pthreads \
  --enable-libtheora \
  --enable-libvorbis \
  --enable-gpl \
  --enable-version3 \
  --enable-postproc \
  --enable-swscale \
  --enable-x11grab \
  --enable-avfilter \
  --enable-gnutls \
  --enable-libcdio \
  --enable-libssh \
  --arch=$ARCH \
  $openjpeg \
  $libdc1394 \
  $mp3lame \
  $libfaac \
  $libxvid \
  $libx264 \
  $libspeex \
  $dirac_fast \
  $non_free \
  $libgsm \
  $libvpx \
  $librtmp \
  $opencore_amr \
  $libfrei0r \
  $libcelt \
  $libbluray \
  $libass \
  $libopenal \
  $libiec61883 \
  $libilbc \
  $libmodplug \
  $libopus \
  $libtwolame \
  $ladspa \
  $ssl

make
make install DESTDIR=$PKG
make install-man DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | \
  grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/txt
cp -a Changelog COPYING* CREDITS INSTALL LICENSE MAINTAINERS README RELEASE \
  VERSION doc/RELEASE_NOTES $PKG/usr/doc/$PKGNAM-$VERSION
cp -a doc/*.txt $PKG/usr/doc/$PKGNAM-$VERSION/txt/
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$PKGARCH-$BUILD$TAG.${PKGTYPE:-tgz}
